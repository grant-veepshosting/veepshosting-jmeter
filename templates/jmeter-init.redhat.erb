#!/bin/sh
### BEGIN INIT INFO
# chkconfig:         2345 85 15
# Provides:          jmeter-server
# Required-Start:    $syslog $local_fs
# Required-Stop:     $syslog $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Apache JMeter Remote Server
# Description:       Apache JMeter Remote Server runs JMeter tests issued from a remote server.
### END INIT INFO

# Author: Brian Flad <bflad417 at gmail dot com>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Apache JMeter Remote Server"
NAME=jmeter
JMETER_USER=<%= @jmeter_user %>
JMETER_PATH=/usr/share/jmeter
SERVER_ARGS="-s -Djava.rmi.server.hostname=<%= @bind_ip %> -Dserver_port=<%= @bind_port %> -j /var/log/jmeter/jmeter-server.log"
SERVER_CMD="${JMETER_PATH}/bin/${NAME}.sh"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
JAVA_PID=$(pgrep -f "[A]pacheJMeter.jar ${SERVER_ARGS}")

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

[ -f $JMETER_PATH/bin/$NAME-server ] || exit 0
[ -f $JMETER_PATH/bin/$NAME ] || exit 0

# Function that gets the PID of the java process
#
update_pid()
{
    JAVA_PID=$(pgrep -f "[A]pacheJMeter.jar ${SERVER_ARGS}")
}

#
# Function that starts the daemon/service
#
do_start()
{
        [ -n "$JAVA_PID" ] && echo "$NAME already started" && exit 0
        echo -n "Starting $NAME: "
        runuser $JMETER_USER $SERVER_CMD -- $SERVER_ARGS 2>&1 &
        RETVAL=$?
        MODE="normal"
        echo "$NAME started in $MODE mode"
        [ $RETVAL = 0 ] && touch /var/lock/subsys/$NAME
}

#
# Function that stops the daemon/service
#
do_stop()
{
        [ -z "$JAVA_PID" ] && echo "$NAME already stopped" && exit 0
        echo -n "Shutting down $NAME: "
        kill $JAVA_PID
        sleep 5
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f /var/lock/subsys/$NAME
}

#
# Function that gives status of daemon/server
#
do_status()
{
        if [ -n "$JAVA_PID" ]; then
            MODE="RUNNING pid $JAVA_PID"
            RETVAL=0
        else
            MODE="STOPPED"
            RETVAL=1
        fi
        echo "$NAME is $MODE"
}

#
# Function that stops and restarts daemon/server
#
do_restart()
{
        do_stop
        update_pid
        do_start
}

case "$1" in
  start)
        do_start
        ;;
  stop)
        do_stop
        ;;
  status)
        do_status
        ;;
  restart|force-reload)
        do_restart
        ;;
  condrestart)
        [ -e /var/lock/subsys/$NAME ] && do_restart
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac

exit $RETVAL
